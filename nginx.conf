worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    log_format  compression  '$remote_addr - $remote_user [$time_local] "$request" '
                             '$status $body_bytes_sent "$http_referer" '
                             '"$http_user_agent" "$http_x_forwarded_for"';

    server{
      listen 80;
      server_name raphael-schreiber.com;

        location / {
          return 301 https://raphael-schreiber.com;
      }
    }

    server {
         listen 443;
           server_name raphael-schreiber.com;

           ssl_certificate /etc/ssl/raphael-schreiber.pem;
           ssl_certificate_key /etc/ssl/raphael-schreiber.key;


           gzip on;
           access_log /logs/access_log compression;
           gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;


           location / {
               root /usr/share/nginx/html;
               index index.html;
           }
    }
}



; worker_processes auto;
; error_log /var/log/nginx/error.log warn;
; pid /var/run/nginx.pid;
;
; events {
;     worker_connections 1024;
; }
;
; http {
;     log_format compression '$remote_addr - $remote_user [$time_local] "$request" '
;                            '$status $body_bytes_sent "$http_referer" '
;                            '"$http_user_agent" "$http_x_forwarded_for"';
;
;     # HTTP zu HTTPS Weiterleitung
;     server {
;         listen 80;
;         server_name raphael-schreiber.com;
;
;         location / {
;             return 301 https://raphael-schreiber.com$request_uri;
;         }
;     }
;
;     # HTTPS Server
;     server {
;         listen 443 ssl;
;         server_name raphael-schreiber.com;
;
;         ssl_certificate /etc/ssl/raphael-schreiber.pem;
;         ssl_certificate_key /etc/ssl/raphael-schreiber.key;
;
;         gzip on;
;         access_log /logs/access_log compression;
;
;         # Hauptkonfiguration für Angular App
;         location / {
;             root /usr/share/nginx/html;
;             index index.html;
;
;             # Wichtig für Angular's Routing
;             try_files $uri $uri/ /index.html;
;         }
;
;         # JavaScript Dateien als Module ausliefern
;         location ~* \.(js|mjs)$ {
;             add_header Content-Type application/javascript;
;             root /usr/share/nginx/html;
;             try_files $uri =404;
;         }
;
;         # CSS und SCSS Dateien korrekt ausliefern
;         location ~* \.(css|scss)$ {
;             add_header Content-Type text/css;
;             root /usr/share/nginx/html;
;             try_files $uri =404;
;         }
;
;         # Bilder korrekt ausliefern
;         location ~* \.(png|jpg|jpeg|gif|ico|svg)$ {
;             root /usr/share/nginx/html;
;             try_files $uri =404;
;         }
;     }
; }

